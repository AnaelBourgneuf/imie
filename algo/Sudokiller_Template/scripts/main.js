// Do not edit this file, it's only purpose is to manage the UI.

// Main function, setup and draw initial grid 
function main() {
    var board = [];
    for (i = 0; i < 9; i++) {
        var line = [];
        for (j = 1; j <= 9; j++) {
            line.push(0);
        }
        board.push(line);
    }
    currentGrid = board;
    draw();
}

// Drawing function, will draw currentGrid, and numberOfMoves
function draw() {
    var str = "";
    
    for (i = 0; i < 3; i++) {
        // Add ClusterLine
        str += '<div class="ClusterLine">';
        for (j = 0; j < 3; j++) {
            // Add Cluster
            str += '<div class="Cluster">';
                for (k = 0; k < 3; k++) {
                    // Add line
                    str += '<div class="Line">';
                    for (l = 0; l < 3; l++) {
                        // Compute x and y
                        var x = i * 3 + k;
                        var y = j * 3 + l;

                        // Get Value
                        var v = currentGrid[x][y];
                        var empty = (v == 0) ? " empty" : "";
                        var value = (v == 0) ? "" : v;

                        // Add box
                        str += '<div class="Box' + empty + '"><p>' + value + '</p></div>';
                    }
                    // Close line
                    str += '</div>';
                }
            // Close Cluster
            str += '</div>';
        }
        // Close ClusterLine
        str += '</div>';
    }
    document.getElementById("Board").innerHTML = str;

    document.getElementById("moves").value = numberOfMoves;
}

// Grid selection function
function selectGrid(gridIndex) {
    var grids = [
        [[0,0,0,0,0,0,1,4,0],[4,0,0,2,0,0,0,3,8],[0,0,3,0,0,4,6,0,9],[0,3,0,0,0,7,0,1,0],[0,6,0,3,9,1,0,0,2],[0,0,4,8,2,0,3,7,0],[3,0,0,0,5,0,7,0,0],[1,4,9,0,6,0,0,0,3],[0,5,2,1,0,0,8,6,0]],
        [[0,0,0,0,0,0,0,0,0],[0,0,0,0,0,3,0,8,5],[0,0,1,0,2,0,0,0,0],[0,0,0,5,0,7,0,0,0],[0,0,4,0,0,0,1,0,0],[0,9,0,0,0,0,0,0,0],[5,0,0,0,0,0,0,7,3],[0,0,2,0,1,0,0,0,0],[0,0,0,0,4,0,0,0,9]],
        [[9,0,0,1,0,0,0,0,5],[0,0,5,0,9,0,2,0,1],[8,0,0,0,4,0,0,0,0],[0,0,0,0,8,0,0,0,0],[0,0,0,7,0,0,0,0,0],[0,0,0,0,2,6,0,0,9],[2,0,0,3,0,0,0,0,6],[0,0,0,2,0,0,9,0,0],[0,0,1,9,0,4,5,7,0]],
        [[1,0,0,0,0,7,0,9,0],[0,3,0,0,2,0,0,0,8],[0,0,9,6,0,0,5,0,0],[0,0,5,3,0,0,9,0,0],[0,1,0,0,8,0,0,0,2],[6,0,0,0,0,4,0,0,0],[3,0,0,0,0,0,0,1,0],[0,4,0,0,0,0,0,0,7],[0,0,7,0,0,0,3,0,0]]
    ];
    currentGrid = grids[gridIndex];
    numberOfMoves = 0;
    draw();
}

// Solve function,called by the Solve button
function solveGrid() {
    if (shouldRefreshTime) {
        stop();
    }
    else {
        realStart = new Date().getTime();
        document.getElementById("SolveButton").innerHTML = "Stop";
        startTime = new Date().getTime();
        shouldRefreshTime = true;
        updateTime();
        solve();
    }
    
}

function stop() {
    shouldRefreshTime = false;
    document.getElementById("SolveButton").innerHTML = "Solve";
    var end = new Date().getTime();
    var duration = (end - realStart) / 1000;
    document.getElementById("time").value = duration + " s";
}

// Time management
var startTime;
var realStart;
var shouldRefreshTime = false;

function updateTime() {
    if (shouldRefreshTime) {
        var time = new Date().getTime();
        var duration = (time - startTime) / 1000;
        document.getElementById("time").value = duration + " s";
        document.getElementById("moves").value = numberOfMoves;
        setTimeout(function() {updateTime();}, 10);
    }
}